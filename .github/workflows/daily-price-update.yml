name: Daily Pokemon Price Tracker

on:
  schedule:
    # Run every day at 8:00 PM PST (4:00 AM UTC next day)
    - cron: '0 4 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  update-prices:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Allow pushing changes to repo
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create daily_prices directory
      run: |
        mkdir -p daily_prices
        
    - name: Run daily price collection
      run: |
        python daily_price_checker_parquet.py
        
    - name: Update portfolio with latest prices
      run: |
        python -c "
        from transaction_manager import TransactionManager
        import pandas as pd
        from datetime import datetime
        
        print('🔄 Updating portfolio with latest prices...')
        tm = TransactionManager()
        
        # Get current holdings
        holdings = tm.db.get_portfolio_holdings()
        if not holdings.empty:
            print(f'📊 Portfolio has {len(holdings)} unique products')
            
            # Get latest market prices
            latest_prices = tm.get_latest_market_prices()
            if not latest_prices.empty:
                print(f'💰 Retrieved {len(latest_prices)} current market prices')
                
                # Calculate total portfolio value
                portfolio_summary = tm.get_portfolio_summary()
                if portfolio_summary:
                    total_cost = portfolio_summary.get('total_cost_basis', 0)
                    total_value = portfolio_summary.get('total_current_value', 0)
                    total_change = total_value - total_cost
                    change_pct = (total_change / total_cost * 100) if total_cost > 0 else 0
                    
                    print(f'📈 Portfolio Summary:')
                    print(f'   💵 Total Cost Basis: \${total_cost:,.2f}')
                    print(f'   💎 Total Current Value: \${total_value:,.2f}')
                    print(f'   📊 Total P&L: \${total_change:,.2f} ({change_pct:+.2f}%)')
                else:
                    print('⚠️  Could not calculate portfolio summary')
            else:
                print('⚠️  No market prices available')
        else:
            print('📝 No holdings in portfolio')
        
        print('✅ Portfolio update completed')
        "
        
    - name: Get current PST date for commit message and file naming
      id: date
      run: |
        # Get current date in America/Los_Angeles (PST/PDT)
        export TZ=America/Los_Angeles
        echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
    - name: Check if new files were created
      id: check_files
      run: |
        if [ -n "$(git status --porcelain daily_prices/)" ]; then
          echo "files_changed=true" >> $GITHUB_OUTPUT
        else
          echo "files_changed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and push new price data
      if: steps.check_files.outputs.files_changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add daily_prices/
        git commit -m "📊 Daily price update for ${{ steps.date.outputs.date }} (PST)"
        git push
        
try: df = pd.read_parquet('daily_prices/market_prices_$(date +'%Y-%m-%d').parquet'); \
print(f'{len(df)} total records, {df[\"marketPrice\"].notna().sum()} with prices') \
except Exception as e: print('Could not read file')")



